{"version":3,"sources":["reportWebVitals.ts","components/containers/app/Header.tsx","components/containers/app/Body.tsx","components/containers/app/Footer.tsx","layouts/AppLayout.tsx","services/AxiosInstance.ts","services/BasicService.ts","services/AuthService.ts","modules/useNotification.ts","store/modules/auth/types.ts","modules/useAuth.ts","pages/Home.tsx","components/containers/auth/Header.tsx","components/containers/auth/Body.tsx","components/containers/auth/Footer.tsx","layouts/AuthLayout.tsx","val/Validator.tsx","components/utils/FormItem.tsx","components/utils/Button.tsx","components/forms/LoginForm.tsx","pages/Auth/Login.tsx","routes/guards/OnlyGuestGuard.tsx","routes/guards/AuthGuard.tsx","common/enums/ButtonType.ts","services/ResourceService.ts","services/FlatService.ts","modules/useFlats.ts","common/helpers/addressConverter.ts","components/flats/FlatListItem.tsx","pages/Flats/FlatsList.tsx","pages/Flats/FlatDetails.tsx","components/forms/FlatForm.tsx","common/types/Flat.ts","common/helpers/generateID.tsx","pages/Flats/FlatEditor.tsx","routes/CreateRoutes.tsx","store/modules/auth/reducers.ts","store/index.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","to","process","Body","props","children","Footer","AppLayout","AxiosInstance","axios","create","baseURL","timeout","maxBodyLength","maxContentLength","headers","interceptors","request","use","error","response","data","BasicService","AuthService","this","post","MySwal","withReactContent","Swal","defaultSettings","toast","position","showConfirmButton","timer","timerProgressBar","useNotification","fire","success","icon","info","warning","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","useAuth","useSelector","state","authReducers","user","isLoggedIn","dispatch","useDispatch","navigate","useNavigate","login","email","password","logIn","type","payload","title","catch","e","console","log","logout","Home","onClick","AuthLayout","Validator","Yup","required","flat","name","rooms","min","area","facilities","description","streetName","houseNumber","postalCode","matches","city","FormItem","TextInput","label","id","loading","useField","field","meta","className","htmlFor","touched","TextArea","Button","click","htmlType","style","marginRight","LoginForm","initialValues","validationSchema","onSubmit","values","setSubmitting","handleLoginCallback","isLoading","Login","useState","setIsLoading","OnlyGuestGuard","AuthGuard","ButtonType","ResourceService","resource","query","url","Object","keys","forEach","key","encodeURI","params","get","put","delete","FlatService","useFlats","flatsLoading","setFlatsLoading","flats","setFlats","setFlat","fetchFlats","Promise","resolve","reject","index","res","finally","fetchFlat","show","firstLine","address","flatNumber","secondLine","FlatListItem","INFO","ERROR","FlatsList","useMount","Array","from","map","i","count","FlatDetails","useParams","width","join","FlatForm","undefined","initialState","enableReinitialize","assert","updateFlatCallback","split","images","EmptyFlatAddress","EmptyFlat","Math","random","toString","substring","generateID","FlatEditor","setLoading","pathname","useLocation","addMode","includes","store","update","CreateRoutes","path","element","USER_STORAGE_KEY","storageUser","localStorage","getItem","JSON","parse","action","setItem","stringify","removeItem","rootReducers","combineReducers","createStore","composeWithDevTools","library","add","fas","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbfc97c6.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Link} from \"react-router-dom\";\n\nfunction Header() {\n\n    return (\n       <>\n           <h3>This is app header</h3>\n           <Link to={`${process.env.PUBLIC_URL}/auth/login`}>Login</Link>\n       </>\n    );\n}\n\nexport default Header;","import React from \"react\";\nimport {WithChildren} from \"common/types/PropTypes\";\n\ninterface BodyProps extends WithChildren {\n}\n\nfunction Body(props: BodyProps) {\n\n    return (\n        <main>\n            { props.children }\n        </main>\n    );\n}\n\nexport default Body;","function Footer() {\n\n    return (\n        <h3>This is app footer</h3>\n    );\n}\n\nexport default Footer;","import Header from \"components/containers/app/Header\";\nimport Body from \"components/containers/app/Body\";\nimport React from \"react\";\nimport Footer from \"components/containers/app/Footer\";\nimport { Outlet } from \"react-router-dom\";\n\n\nfunction AppLayout() {\n\n    return (\n        <>\n            <Header/>\n            <Body>\n                <Outlet/>\n            </Body>\n            <Footer/>\n        </>\n    );\n}\n\nexport default AppLayout;","import axios from 'axios'\n\nconst AxiosInstance = axios.create({\n  baseURL:\n    process.env.NODE_ENV !== 'development'\n      ? 'http://20.127.80.3:8080/api/v1/'\n      : 'http://127.0.0.1:3001/',\n  timeout: 10000,\n  maxBodyLength: 5000,\n  maxContentLength: 5000,\n\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n})\n\nAxiosInstance.interceptors.request.use(\n  (request: any) => {\n    return request\n  },\n  (error) => {\n    //(new ErrorService()).handle(error.response?.status, error.response?.data)\n    throw error\n  }\n)\n\nAxiosInstance.interceptors.response.use(\n    ({ data }: any) => data,\n    (error: any) => {\n      //(new ErrorService()).handle(error.response?.status, error.response?.data)\n      throw error\n    }\n)\n\nexport default AxiosInstance;\n","import AxiosInstance from \"services/AxiosInstance\";\n\nexport default abstract class BasicService {\n  protected axios = AxiosInstance;\n}\n","import BasicService from \"services/BasicService\";\n\nclass AuthService extends BasicService {\n  public logIn(data: object) {\n    return this.axios.post('login', data)\n  }\n}\n\nexport default new AuthService()\n","import Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\nconst MySwal = withReactContent(Swal)\n\nexport interface NotificationInterface {\n    title: string,\n    message?: string\n}\n\nconst defaultSettings = {\n    toast: true,\n    position: 'bottom-end',\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true,\n}\n\nconst useNotification = () => {\n    const toast = (data: any) => {\n        MySwal.fire({\n            ...defaultSettings,\n            ...data\n        });\n    };\n\n    const success = (data: NotificationInterface) => {\n        toast({\n            ...data,\n            icon: 'success',\n        });\n    };\n\n    const error = (data: NotificationInterface) => {\n        toast({\n            ...data,\n            icon: 'error',\n        });\n    };\n\n    const info = (data: NotificationInterface) => {\n        toast({\n            ...data,\n            icon: 'info',\n        });\n    };\n\n    const warning = (data: NotificationInterface) => {\n        toast({\n            ...data,\n            icon: 'warning',\n        });\n    };\n\n    return {\n        success,\n        error,\n        info,\n        warning,\n        toast\n    }\n}\n\nexport default useNotification;","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\n\nexport const LOGOUT = 'LOGOUT';\n\nexport interface User {\n    token: string,\n    email: string\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport AuthService from \"services/AuthService\";\nimport useNotification from \"modules/useNotification\";\nimport {useNavigate} from \"react-router-dom\";\nimport {LOGIN_FAILURE, LOGIN_SUCCESS, LOGOUT} from \"store/modules/auth/types\";\n\nconst useAuth = () => {\n    const { user, isLoggedIn } = useSelector((state: any) => state.authReducers);\n    const dispatch = useDispatch();\n    const { success, error } = useNotification();\n    const navigate = useNavigate();\n\n    const login = (email: string, password: string) => {\n        return AuthService.logIn({ email: email, password: password })\n            .then((data) => {\n                dispatch({\n                    type: LOGIN_SUCCESS,\n                    payload: data.data\n                });\n                success({ title: \"Logged in successfully!\" });\n                navigate(`${process.env.PUBLIC_URL}/`);\n            })\n            .catch((e) => {\n                console.log(e);\n                dispatch({\n                    type: LOGIN_FAILURE\n                });\n                error({ title: \"Invalid credentials!\" });\n                throw e;\n            })\n    }\n\n    const logout = () => {\n        dispatch({\n            type: LOGOUT\n        });\n        success({ title: \"Logged out successfully!\" });\n        navigate(`${process.env.PUBLIC_URL}/auth/login`);\n    }\n\n    return {\n        user,\n        isLoggedIn,\n        login,\n        logout\n    }\n}\n\nexport default useAuth;","import useAuth from \"modules/useAuth\";\nimport {Link} from \"react-router-dom\";\n\nfunction Home() {\n    const { logout } = useAuth();\n\n    return (\n        <div>\n            <h3>Home page</h3>\n            <Link to={`${process.env.PUBLIC_URL}/flats`}>Flats</Link>\n            <button onClick={() => logout()}>Log out</button>\n        </div>\n    );\n}\n\nexport default Home;","import {Link} from \"react-router-dom\";\n\nfunction Header() {\n\n    return (\n        <>\n            <h3>This is auth header</h3>\n            <Link to={`${process.env.PUBLIC_URL}/`}>Home</Link>\n        </>\n    );\n}\n\nexport default Header;","import {WithChildren} from \"common/types/PropTypes\";\n\ninterface BodyProps extends WithChildren {\n}\n\n\nfunction Body(props: BodyProps) {\n\n    return (\n        <main>\n            { props.children }\n        </main>\n    );\n}\n\nexport default Body;","function Footer() {\n\n    return (\n        <h3>This is auth footer</h3>\n    );\n}\n\nexport default Footer;","import Header from \"components/containers/auth/Header\";\nimport Body from \"components/containers/auth/Body\";\nimport Footer from \"components/containers/auth/Footer\";\nimport { Outlet } from \"react-router-dom\";\n\nfunction AuthLayout() {\n\n    return (\n        <>\n            <Header/>\n            <Body>\n                <Outlet/>\n            </Body>\n            <Footer/>\n        </>\n    );\n}\n\nexport default AuthLayout;","import * as Yup from 'yup';\r\n\r\nconst Validator = () => {\r\n    const login = Yup.object({\r\n       email: Yup.string().required('Required').email('Invalid e-mail address'),\r\n       password: Yup.string().required('Required') /* empty passwords are not permitted */\r\n    });\r\n\r\n    const flat = Yup.object({\r\n        name: Yup.string().required('Required'),\r\n        rooms: Yup.number().required('Required').min(1, 'The Flat needs to have at least one room'),\r\n        area: Yup.number().required('Required').min(2.5, 'The Flat needs to be at least 2.5 metres squared'), /* Easter egg */\r\n        facilities: Yup.string().required('Required'),\r\n        description: Yup.string().required('Required'),\r\n\r\n        /* flat address validation */\r\n        streetName: Yup.string().required('Required'),\r\n        houseNumber: Yup.string().required('Required'),\r\n        postalCode: Yup.string().required('Required').matches(/^\\d{2}-\\d{3}$/, 'Postal code must match format: xx-xxx'),\r\n        city: Yup.string().required('Required')\r\n    })\r\n\r\n    return {\r\n        login,\r\n        flat\r\n    };\r\n};\r\n\r\nexport default Validator;","import React from \"react\";\r\nimport { useField, FieldConfig } from 'formik';\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\ninterface ItemInterface {\r\n    label: string,\r\n    props: FieldConfig,\r\n    id: string,\r\n    loading?: boolean\r\n}\r\n\r\nconst FormItem = () => {\r\n    const TextInput = ({ label, props, id, loading }: ItemInterface) => {\r\n        const [field, meta] = useField(props);\r\n        return (\r\n            <div className={\"form-text-input\"}>\r\n                <label htmlFor={id || props.name}>{label}</label>\r\n                {!loading\r\n                    ?\r\n                    <input className=\"text-input\" {...field} {...props} />\r\n                    :\r\n                    <Skeleton/>\r\n                }\r\n                {meta.touched && meta.error ? (\r\n                    <div className=\"error\">{meta.error}</div>\r\n                ) : null}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const TextArea = ({ label, props, id, loading }: ItemInterface) => {\r\n        const [field, meta] = useField(props);\r\n        return (\r\n            <div className={\"form-text-area-input\"}>\r\n                <label htmlFor={id || props.name}>{label}</label>\r\n                {!loading\r\n                    ?\r\n                    <textarea className=\"text-area\" {...field} {...props} />\r\n                    :\r\n                    <Skeleton/>\r\n                }\r\n                {meta.touched && meta.error ? (\r\n                    <div className=\"error\">{meta.error}</div>\r\n                ) : null}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return {\r\n        TextInput,\r\n        TextArea\r\n    }\r\n};\r\n\r\nexport default FormItem;","import {WithChildren} from \"common/types/PropTypes\";\nimport {ButtonType} from \"common/enums/ButtonType\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ninterface ButtonProps extends WithChildren {\n    click?: Function,\n    type?: ButtonType,\n    icon?: string,\n    loading?: boolean,\n    htmlType?: 'button' | 'submit' | 'reset'\n}\n\nfunction Button(props: ButtonProps) {\n    const handleClick = () => {\n        if (props.click) props.click();\n    }\n\n    const renderButtonContent = () => {\n        return (\n            <>\n                {\n                    props.icon\n                        // @ts-ignore\n                        ? <FontAwesomeIcon icon={props.icon} style={{marginRight: '2px'}}/>\n                        : ''\n                }\n                { props.children }\n            </>\n        )\n    }\n\n    return (\n        <button\n            className={`default-button default-button--${props.type ?? 'info'}`}\n            onClick={() => handleClick()}\n            type={props.htmlType ?? 'button' }\n        >\n            {\n                props.loading\n                    ? <span>Loading</span>\n                    : renderButtonContent()\n            }\n        </button>\n    );\n}\n\nexport default Button;","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport Validator from \"../../val/Validator\";\r\nimport FormItem from \"../utils/FormItem\";\r\nimport Button from \"components/utils/Button\";\r\n\r\ninterface LoginFormInterface {\r\n    handleLoginCallback: (email: string, password: string) => void,\r\n    isLoading: boolean\r\n}\r\n\r\nconst LoginForm = (props: LoginFormInterface) => {\r\n    const { login } = Validator();\r\n    const { TextInput } = FormItem();\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: '',\r\n                password: ''\r\n            }}\r\n            validationSchema={login}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                props.handleLoginCallback(values.email, values.password);\r\n                setSubmitting(false);\r\n                values.password = '';\r\n            }}\r\n        >\r\n            <Form>\r\n                <TextInput label={'E-Mail:'} props={{name: 'email', type: 'text'}} id={'email'} />\r\n                <TextInput label={'Password'} props={{name: 'password', type: 'password'}} id={'password'} />\r\n\r\n                <Button\r\n                    htmlType={'submit'}\r\n                    icon=\"sign-in-alt\"\r\n                    loading={props.isLoading}\r\n                >\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import {useState} from \"react\";\nimport useAuth from \"modules/useAuth\";\nimport LoginForm from \"../../components/forms/LoginForm\";\n\nfunction Login() {\n    const [isLoading, setIsLoading] = useState(false);\n    const { login } = useAuth();\n\n    const handleLogin = (email: string, password: string) => {\n        setIsLoading(true);\n\n        login(email, password)\n            .catch(() => {\n                setIsLoading(false);\n            });\n    }\n\n    return (\n        <div>\n            <h4>john@doe.com | password</h4>\n            <LoginForm handleLoginCallback={handleLogin} isLoading={isLoading} />\n        </div>\n    );\n}\n\nexport default Login;","import {Navigate, Outlet} from \"react-router-dom\";\nimport useAuth from \"modules/useAuth\";\n\nfunction OnlyGuestGuard() {\n    const { isLoggedIn } = useAuth();\n\n    if (isLoggedIn) {\n        return <Navigate to={`${process.env.PUBLIC_URL}/`} />;\n    }\n\n    return <Outlet/>;\n}\n\nexport default OnlyGuestGuard;","import {Navigate, Outlet} from \"react-router-dom\";\nimport useAuth from \"modules/useAuth\";\nimport useNotification from \"modules/useNotification\";\n\nfunction AuthGuard() {\n    const { isLoggedIn } = useAuth();\n    const { error } = useNotification();\n\n    if (!isLoggedIn) {\n        error({ title: 'You are not authenticated!' });\n        return <Navigate to={`${process.env.PUBLIC_URL}/auth/login`} />;\n    }\n\n    return <Outlet/>;\n}\n\nexport default AuthGuard;","export enum ButtonType {\n    INFO = 'info',\n    SUCCESS = 'success',\n    ERROR = 'error'\n}","import BasicService from './BasicService'\n\nexport default abstract class ResourceService extends BasicService {\n  protected abstract resource: string\n\n  public index(query: any = null, ...params: any[]): any {\n    let url: string = this.resource\n\n    if (query) {\n      url += '?'\n      Object.keys(query).forEach((key) => {\n        url += key + '=' + encodeURI(query[key]) + '&'\n      })\n    }\n\n    return this.axios.get(url, ...params)\n  }\n\n  public show(id: string, ...params: any[]) {\n    return this.axios.get(this.resource + '/' + id, ...params)\n  }\n\n  public store(data: object, ...params: any[]) {\n    return this.axios.post(this.resource, data, ...params)\n  }\n\n  public update(id: string, data: object, ...params: any[]) {\n    return this.axios.put(this.resource + '/' + id, data, ...params)\n  }\n\n  public destroy(id: string, ...params: any[]) {\n    return this.axios.delete(this.resource + '/' + id, ...params)\n  }\n}\n","import ResourceService from \"services/ResourceService\";\n\nclass FlatService extends ResourceService {\n  protected resource = 'flats';\n}\n\nexport default new FlatService()\n","import {useState} from \"react\";\nimport FlatService from \"services/FlatService\";\nimport {Flat} from \"common/types/Flat\";\n\nconst useFlats = () => {\n    const [flatsLoading, setFlatsLoading] = useState(false);\n    const [flats, setFlats] = useState<Flat[]>([]);\n    const [flat, setFlat] = useState<Flat>();\n\n    const fetchFlats = () => {\n        return new Promise((resolve, reject) => {\n            setFlatsLoading(true);\n            return FlatService.index()\n                .then((res: any) => {\n                    setFlats(res);\n                    resolve(true);\n                })\n                .catch((e: any) => reject(e))\n                .finally(() => setFlatsLoading(false));\n        })\n    }\n\n    const fetchFlat = (id: string) => {\n        return new Promise((resolve, reject) => {\n            setFlatsLoading(true);\n            return FlatService.show(id)\n                .then((res: any) => {\n                    setFlat(res);\n                    resolve(true);\n                })\n                .catch((e: any) => reject(e))\n                .finally(() => setFlatsLoading(false));\n        })\n    }\n\n    return {\n        flatsLoading,\n        flats,\n        flat,\n        fetchFlats,\n        fetchFlat\n    }\n}\n\nexport default useFlats;","import {FlatAddress} from \"common/types/Flat\";\n\nexport function firstLine(address: FlatAddress) {\n    return `${address.streetName} ${address.houseNumber} ${address.flatNumber ? '/' + address.flatNumber : ''}`;\n}\n\nexport function secondLine(address: FlatAddress) {\n    return `${address.postalCode} ${address.city}`;\n}\n\nexport function full(address?: FlatAddress) {\n    return address ? `${firstLine(address)} ${secondLine(address)}` : '';\n}","import {Flat} from \"common/types/Flat\";\nimport {firstLine, secondLine} from \"common/helpers/addressConverter\";\nimport {useNavigate} from \"react-router-dom\";\nimport Button from \"components/utils/Button\";\nimport {ButtonType} from \"common/enums/ButtonType\";\n\ninterface FlatListItemProps {\n    flat: Flat\n}\n\nfunction FlatListItem(props: FlatListItemProps) {\n    const navigate = useNavigate();\n\n    const handleDetailsClick = () => {\n        navigate(`${process.env.PUBLIC_URL}/flats/${props.flat.id}/details`);\n    }\n\n    const handleEditClick = () => {\n        navigate(`${process.env.PUBLIC_URL}/flats/${props.flat.id}/edit`);\n    }\n\n    const handleDeleteClick = () => {\n\n    }\n\n    return (\n        <div className=\"list-item\">\n            <h2>{ props.flat.name }</h2>\n            <ul>\n                <li>{ props.flat.rooms } rooms</li>\n                <li>{ firstLine(props.flat.address)} </li>\n                <li>{ secondLine(props.flat.address)} </li>\n            </ul>\n            <div className=\"list-item__buttons\">\n                <Button\n                    click={() => handleDetailsClick()}\n                    icon=\"eye\"\n                >\n                    Details\n                </Button>\n                <Button\n                    click={() => handleEditClick()}\n                    type={ButtonType.INFO}\n                    icon=\"pen\"\n                >\n                    Edit\n                </Button>\n                <Button\n                    click={() => handleDeleteClick()}\n                    type={ButtonType.ERROR}\n                    icon=\"trash\"\n                >\n                    Delete\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default FlatListItem;","import useFlats from \"modules/useFlats\";\nimport {Flat} from \"common/types/Flat\";\nimport FlatListItem from \"components/flats/FlatListItem\";\nimport {useMount} from \"react-use\";\nimport Skeleton from 'react-loading-skeleton';\n\nfunction FlatsList() {\n    const { flatsLoading, flats, fetchFlats } = useFlats();\n\n    useMount(() => fetchFlats());\n\n    const renderFlatsList = () => {\n        return flats.map((flat: Flat) => <FlatListItem flat={flat} key={flat.id}/>);\n    }\n\n    const renderSkeleton = () => {\n        return Array.from(Array(5).keys()).map((i: number) => <div key={i}>\n            <Skeleton count={3}/>\n        </div>)\n    }\n\n    return (\n        <div>\n            {\n                flatsLoading\n                ? renderSkeleton()\n                : renderFlatsList()\n            }\n        </div>\n    );\n}\n\nexport default FlatsList;","import {useNavigate, useParams} from \"react-router-dom\";\nimport useFlats from \"modules/useFlats\";\nimport {useMount} from \"react-use\";\nimport useNotification from \"modules/useNotification\";\nimport {full} from \"common/helpers/addressConverter\";\nimport Skeleton from 'react-loading-skeleton';\n\nfunction FlatDetails() {\n    const { id } = useParams();\n    const { flat, fetchFlat } = useFlats();\n    const navigate = useNavigate();\n    const { error } = useNotification();\n\n    useMount(() => fetchFlat(id as string).catch(() => {\n        error({ title: \"Flat with provided id has not been found!\" });\n        navigate(`${process.env.PUBLIC_URL}'/flats`);\n    }));\n\n    return (\n        <div>\n            <div>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>ID</td>\n                            <td>{ flat?.id ?? <Skeleton width={80}/> }</td>\n                        </tr>\n                        <tr>\n                            <td>Name</td>\n                            <td>{ flat?.name ?? <Skeleton width={200}/> }</td>\n                        </tr>\n                        <tr>\n                            <td>Rooms</td>\n                            <td>{ flat?.rooms ?? <Skeleton width={40}/>}</td>\n                        </tr>\n                        <tr>\n                            <td>Area</td>\n                            <td>{ flat?.area ?? <Skeleton/> }</td>\n                        </tr>\n                        <tr>\n                            <td>Facilities</td>\n                            <td>{ flat?.facilities ? flat?.facilities.join(', ') : <Skeleton width={180}/> }</td>\n                        </tr>\n                        <tr>\n                            <td>Address</td>\n                            <td>{ flat?.address ? full(flat?.address) : <Skeleton width={200}/> }</td>\n                        </tr>\n                        <tr>\n                            <td>Description</td>\n                            <td>{ flat?.description ?? <Skeleton count={4}/> }</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nexport default FlatDetails;","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport Validator from \"../../val/Validator\";\r\nimport FormItem from \"../utils/FormItem\";\r\nimport Button from \"components/utils/Button\";\r\nimport { Flat } from \"../../common/types/Flat\";\r\nimport assert from \"assert\";\r\n\r\ninterface FlatFormInterface {\r\n    updateFlatCallback: (flat: Flat) => void,\r\n    initialState?: Flat\r\n    loading?: boolean\r\n}\r\n\r\nconst FlatForm = (props: FlatFormInterface) => {\r\n    const { flat } = Validator();\r\n    const { TextInput, TextArea } = FormItem();\r\n    const loading = props.initialState === undefined;\r\n\r\n    return (\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{\r\n                name: props.initialState?.name,\r\n                rooms: props.initialState?.rooms,\r\n                area: props.initialState?.area,\r\n                facilities: props.initialState?.facilities?.join(','),\r\n                description: props.initialState?.description,\r\n\r\n                /* flat address validation */\r\n                streetName: props.initialState?.address.streetName,\r\n                houseNumber: props.initialState?.address.houseNumber,\r\n                flatNumber: props.initialState?.address.flatNumber,\r\n                postalCode: props.initialState?.address.postalCode,\r\n                city: props.initialState?.address.city\r\n            }}\r\n            validationSchema={flat}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                /* validation will not allow below values to be undefined */\r\n                assert(props.initialState?.id &&\r\n                    values.name &&\r\n                    values.facilities &&\r\n                    values.description &&\r\n                    values.streetName &&\r\n                    values.houseNumber &&\r\n                    values.postalCode &&\r\n                    values.city);\r\n\r\n                props.updateFlatCallback({\r\n                    id: props.initialState?.id,\r\n                    name: values.name,\r\n                    rooms: values.rooms,\r\n                    area: values.area,\r\n                    facilities: values?.facilities?.split(','),\r\n                    description: values.description,\r\n                    images: [],\r\n\r\n                    address: {\r\n                        streetName: values.streetName,\r\n                        houseNumber: values.houseNumber,\r\n                        flatNumber: values.flatNumber,\r\n                        postalCode: values.postalCode,\r\n                        city: values.city\r\n                    }\r\n                });\r\n                setSubmitting(false);\r\n            }}\r\n        >\r\n            <Form>\r\n                <TextInput label={'Name:'} props={{name: 'name', type: 'text'}} id={'name'} loading={loading}/>\r\n                <TextInput label={'Rooms'} props={{name: 'rooms', type: 'number'}} id={'rooms'} loading={loading}/>\r\n                <TextInput label={'Area'} props={{name: 'area', type: 'number'}} id={'area'} loading={loading}/>\r\n                <TextInput label={'Facilities'} props={{name: 'facilities', type: 'text'}} id={'facilities'} loading={loading}/>\r\n\r\n                <TextInput label={'Street Name'} props={{name: 'streetName', type: 'text'}} id={'streetName'} loading={loading}/>\r\n                <TextInput label={'House Number'} props={{name: 'houseNumber', type: 'text'}} id={'houseNumber'} loading={loading}/>\r\n                <TextInput label={'Flat Number'} props={{name: 'flatNumber', type: 'text'}} id={'flatNumber'} loading={loading}/>\r\n                <TextInput label={'Postal Code'} props={{name: 'postalCode', type: 'text'}} id={'postalCode'} loading={loading}/>\r\n                <TextInput label={'City'} props={{name: 'city', type: 'text'}} id={'city'} loading={loading}/>\r\n\r\n                <TextArea label={'Description'} props={{name: 'description'}} id={'description'} loading={loading}/>\r\n\r\n                <Button\r\n                    htmlType={'submit'}\r\n                    icon=\"save\"\r\n                    loading={props.loading}\r\n                >\r\n                    Save\r\n                </Button>\r\n            </Form>\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default FlatForm;","import generateID from \"../helpers/generateID\";\n\nexport interface Flat {\n    id: string,\n    name: string,\n    address: FlatAddress,\n    rooms?: number,\n    area?: number,\n    facilities: string[],\n    images: string[],\n    description: string\n}\n\nexport interface FlatAddress {\n    streetName: string,\n    houseNumber: string,\n    flatNumber?: string,\n    postalCode: string,\n    city: string\n}\n\nexport const EmptyFlatAddress: FlatAddress = {\n    streetName: '',\n    houseNumber: '',\n    flatNumber: undefined,\n    postalCode: '',\n    city: ''\n}\n\nexport const EmptyFlat: Flat = {\n    id: generateID(),\n    name: '',\n    address: EmptyFlatAddress,\n    rooms: undefined,\n    area: undefined,\n    facilities: [],\n    images: [],\n    description: ''\n}\n\n","const generateID = () => Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\nexport default generateID;","import { useParams, useLocation } from \"react-router-dom\";\nimport Button from \"../../components/utils/Button\";\nimport {useNavigate} from \"react-router-dom\";\nimport FlatForm from \"../../components/forms/FlatForm\";\nimport {Flat, EmptyFlat } from \"../../common/types/Flat\";\nimport {useMount} from \"react-use\";\nimport useFlats from \"modules/useFlats\";\nimport useNotification from \"../../modules/useNotification\";\nimport {useState} from \"react\";\nimport FlatService from \"../../services/FlatService\";\n\nfunction FlatEditor() {\n    const [loading, setLoading] = useState(false);\n\n    const { id } = useParams();\n    const { pathname } = useLocation();\n    const { flat, fetchFlat } = useFlats();\n    const { error } = useNotification();\n\n    const navigate = useNavigate();\n    const addMode = !pathname.includes('edit');\n\n    useMount(() => {\n        if (!addMode) {\n            fetchFlat(id as string)\n                .catch(() => {\n                    error({title: \"Flat with provided id has not been found!\"});\n                    navigate(`${process.env.PUBLIC_URL}/flats`);\n                });\n    }});\n\n    const updateFlat = (flat: Flat) => {\n        setLoading(true);\n        if (addMode) {\n            FlatService.store(flat)\n                .catch(() => console.error('Error while adding the flat'))\n                .finally(() => setLoading(false));\n        } else {\n            FlatService.update(flat.id, flat)\n                .catch(() => console.error('Error while updating the flat'))\n                .finally(() => setLoading(false));\n        }\n\n    }\n\n    return (\n        <div>\n            <Button\n                icon=\"chevron-left\"\n                click={() => navigate(`${process.env.PUBLIC_URL}/flats`)}\n            >\n                Back\n            </Button>\n\n            <FlatForm updateFlatCallback={updateFlat} initialState={addMode ? EmptyFlat : flat} loading={loading}/>\n        </div>\n    );\n}\n\nexport default FlatEditor;","import {BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport AppLayout from \"layouts/AppLayout\";\nimport Home from \"pages/Home\";\nimport AuthLayout from \"layouts/AuthLayout\";\nimport Login from \"pages/Auth/Login\";\nimport OnlyGuestGuard from \"routes/guards/OnlyGuestGuard\";\nimport AuthGuard from \"routes/guards/AuthGuard\";\nimport FlatsList from \"pages/Flats/FlatsList\";\nimport FlatDetails from \"pages/Flats/FlatDetails\";\nimport FlatEditor from \"pages/Flats/FlatEditor\";\n\nfunction CreateRoutes() {\n    return (\n      <BrowserRouter>\n        <Routes>\n          <Route path={`${process.env.PUBLIC_URL}/`} element={<AppLayout/>}>\n            <Route element={<AuthGuard/>}>\n              <Route path=\"\" element={<Home/>}/>\n              <Route path=\"flats\" element={<FlatsList/>}/>\n              <Route path=\"flats/:id/details\" element={<FlatDetails/>}/>\n              <Route path=\"flats/:id/edit\" element={<FlatEditor/>}/>\n              <Route path=\"flats/add\" element={<FlatEditor/>}/>\n            </Route>\n          </Route>\n          <Route path={`${process.env.PUBLIC_URL}/auth`} element={<AuthLayout/>}>\n            <Route element={<OnlyGuestGuard/>}>\n              <Route path=\"login\" element={<Login/>}/>\n            </Route>\n          </Route>\n        </Routes>\n      </BrowserRouter>\n    );\n}\n\nexport default CreateRoutes","import {LOGIN_FAILURE, LOGIN_SUCCESS, LOGOUT, User} from \"store/modules/auth/types\";\n\nconst USER_STORAGE_KEY = 'user';\n\nconst storageUser = localStorage.getItem(USER_STORAGE_KEY);\n\nconst user: User = storageUser ? JSON.parse(storageUser) : null;\n\nconst initialState = user\n    ? { isLoggedIn: true, user }\n    : { isLoggedIn: false, user: null };\n\nfunction authReducers(state = initialState, action: any) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case LOGIN_SUCCESS:\n            localStorage.setItem(USER_STORAGE_KEY, JSON.stringify(payload));\n            return {\n                ...state,\n                isLoggedIn: true,\n                user: payload,\n            };\n        case LOGIN_FAILURE:\n            return {\n                ...state,\n                isLoggedIn: false,\n                user: null,\n            };\n        case LOGOUT:\n            localStorage.removeItem(USER_STORAGE_KEY);\n            return {\n                ...state,\n                isLoggedIn: false,\n                user: null,\n            };\n        default:\n            return state;\n    }\n}\n\nexport default authReducers;","import {combineReducers, createStore} from \"redux\";\nimport authReducers from \"store/modules/auth/reducers\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst rootReducers = combineReducers({\n    authReducers\n});\n\nconst store = createStore(\n    rootReducers,\n    composeWithDevTools()\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'styles/styles.scss';\nimport reportWebVitals from './reportWebVitals';\nimport CreateRoutes from \"./routes/CreateRoutes\";\nimport {Provider} from \"react-redux\";\nimport store from \"store\";\nimport 'react-loading-skeleton/dist/skeleton.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(fas);\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <CreateRoutes/>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}