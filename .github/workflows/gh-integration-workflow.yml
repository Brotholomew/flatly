# A workflow to build the flatly app and send files to our vps
name: github pages
env:
  LOGFILE: /home/flatly/drop_zone/www/backend/logs/flatly.log
  FRONTEND_DIR: /home/flatly/drop_zone/www

on:
  push:
    branches: [ main, develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js 16.x 
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
        
      - name: build the flatly frontend
        run: | 
          npm ci
          npm run build --if-present
          
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: frontend
          path: '${{ github.workspace }}/build/*'
    
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    
    # clean dirs
    
    - name: clean the develop dir
      if: github.ref == 'refs/heads/develop'
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        if: github.ref == 'refs/heads/develop'
        username: ${{ secrets.HOST_USERNAME }}
        key: ${{ secrets.HOST_KEY }}
        envs: LOGFILE,FRONTEND_DIR
        port: 22
        script: |
          sudo echo "[CI] cleaning the develop dir"
          sudo echo "[CI] cleaning the develop dir" >> $LOGFILE
          cd $FRONTEND_DIR
          yes | rm -r -f ./develop > /dev/null 2>&1
          mkdir -p develop
          sudo echo "[CI] cleaned the develop dir"
          sudo echo "[CI] cleaned the develop dir" >> $LOGFILE
          
    - name: clean the main dir
      if: github.ref == 'refs/heads/main'
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.HOST_USERNAME }}
        key: ${{ secrets.HOST_KEY }}
        envs: LOGFILE,FRONTEND_DIR
        port: 22
        script: |
          sudo echo "[CI] cleaning the main dir"
          sudo echo "[CI] cleaning the main dir" >> $LOGFILE
          cd $FRONTEND_DIR
          yes | rm -r -f ./main > /dev/null 2>&1
          mkdir -p main
          sudo echo "[CI] cleaned the main dir"
          sudo echo "[CI] cleaned the main dir" >> $LOGFILE
     
    # -- * --
        
    # download artifact    
    
    - name: download develop artifact
      if: github.ref == 'refs/heads/develop'
      uses: actions/download-artifact@v2
      with:
        name: frontend
        path: .

    - name: download main artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/download-artifact@v2
      with:
        name: frontend
        path: .
        
    # -- * --
    
    # sanity check
    - name: sanity check
      run: ls -la
    
    - name: create archive
      run: |
        tar -czvf frontend.tar *
    
    # copy and extract files to develop
    
    - name: copy files
      if: github.ref == 'refs/heads/develop'
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.HOST_USERNAME }}
        key: ${{ secrets.HOST_KEY }}
        port: 22
        source: "frontend.tar"
        target: "${{ env.FRONTEND_DIR }}/develop"
        
    - name: extract the archive
      if: github.ref == 'refs/heads/develop'
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.HOST_USERNAME }}
        key: ${{ secrets.HOST_KEY }}
        envs: LOGFILE,FRONTEND_DIR
        port: 22
        script: |
          sudo echo "[CI] extracting artifact"
          sudo echo "[CI] extracting artifact" >> $LOGFILE
          cd $FRONTEND_DIR/develop
          tar -xvf frontend.tar
          rm frontend.tar
          sudo echo "[CI] extracted artifact"
          sudo echo "[CI] extracted artifact" >> $LOGFILE 
    
    # -- * --

    # copy and extract files to main
    
    - name: copy files
      if: github.ref == 'refs/heads/main'
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.HOST_USERNAME }}
        key: ${{ secrets.HOST_KEY }}
        port: 22
        source: "frontend.tar"
        target: "${{ env.FRONTEND_DIR }}/main"
        
    - name: extract the archive
      if: github.ref == 'refs/heads/main'
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.HOST_USERNAME }}
        key: ${{ secrets.HOST_KEY }}
        envs: LOGFILE,FRONTEND_DIR
        port: 22
        script: |
          sudo echo "[CI] extracting artifact"
          sudo echo "[CI] extracting artifact" >> $LOGFILE
          cd $FRONTEND_DIR/main
          tar -xvf frontend.tar
          rm frontend.tar
          sudo echo "[CI] extracted artifact"
          sudo echo "[CI] extracted artifact" >> $LOGFILE 
    
    # -- * --
